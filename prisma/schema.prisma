generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  // directUrl = env("DIRECT_URL")
}

model User {
  id         Int            @id @default(autoincrement())
  username   String
  password   String
  permission PermissionType
  sessions   Session[]

  @@map("users")
}

model Session {
  id        String   @id
  user      User     @relation(references: [id], fields: [userID], onUpdate: Cascade, onDelete: Cascade)
  userID    Int
  expiresAt DateTime

  @@map("sessions")
}

model Trait {
  id             Int                 @id @default(autoincrement())
  name           String              @unique
  desc           String?
  type           TraitName
  expression     String?
  zodiacCaste    Zodiac[]            @relation(name: "Caste")
  zodiacSway     Zodiac[]            @relation(name: "Sway")
  zodiacAspect   Zodiac[]            @relation(name: "Aspect")
  trees          Tree[]
  templateTraits TemplatesOnTraits[]
  moveTraits     MovesOnTraits[]

  @@map("traits")
}

model Zodiac {
  id       Int    @id @default(autoincrement())
  name     String @unique
  title    String
  caste    Trait  @relation(name: "Caste", fields: [casteID], references: [id], onUpdate: Cascade, onDelete: Cascade)
  sway     Trait  @relation(name: "Sway", fields: [swayID], references: [id], onUpdate: Cascade, onDelete: Cascade)
  aspect   Trait  @relation(name: "Aspect", fields: [aspectID], references: [id], onUpdate: Cascade, onDelete: Cascade)
  casteID  Int
  swayID   Int
  aspectID Int

  @@map("zodiacs")
}

model Tree {
  id         Int       @id @default(autoincrement())
  name       String    @unique
  desc       String?
  type       TraitName
  source     Trait     @relation(fields: [sourceID], references: [id], onUpdate: Cascade, onDelete: Cascade)
  sourceID   Int
  expression String?

  @@map("trees")
}

model Template {
  id         Int                 @id @default(autoincrement())
  name       String              @unique
  desc       String?
  expression String?
  traits     TemplatesOnTraits[]

  @@map("templates")
}

model TemplatesOnTraits {
  id         Int      @id @default(autoincrement())
  template   Template @relation(fields: [templateID], references: [id], onUpdate: Cascade, onDelete: Cascade)
  templateID Int
  trait      Trait    @relation(fields: [traitID], references: [id], onUpdate: Cascade, onDelete: Cascade)
  traitID    Int

  @@map("templates_on_traits")
}

model Move {
  id         Int             @id @default(autoincrement())
  name       String          @unique
  desc       String?
  origin     TreeName
  originID   Int?
  expression String?
  traits     MovesOnTraits[]

  @@map("moves")
}

model MovesOnTraits {
  id      Int   @id @default(autoincrement())
  move    Move  @relation(fields: [moveID], references: [id], onUpdate: Cascade, onDelete: Cascade)
  moveID  Int
  trait   Trait @relation(fields: [traitID], references: [id], onUpdate: Cascade, onDelete: Cascade)
  traitID Int

  @@map("moves_on_traits")
}

model Pronoun {
  id     Int     @id @default(autoincrement())
  name   String  @unique
  nom    String
  obj    String
  det    String
  pos    String
  ref    String
  plural Boolean

  @@map("pronouns")
}

model Quirk {
  id      Int     @id @default(autoincrement())
  name    String  @unique
  desc    String?
  match   String
  replace String

  @@map("quirks")
}

model Message {
  id      Int         @id @default(autoincrement())
  type    MessageType
  message String
}

model Color {
  id       Int       @id @default(autoincrement())
  hex      String
  origin   ModelName
  originID Int

  @@map("colors")
}

enum PermissionType {
  USER
  DEVELOPER
  ADMINISTRATOR

  @@map("permission_type_enum")
}

enum TraitName {
  CASTES
  SWAYS
  CLASSES
  ASPECTS
  TAGS

  @@map("trait_name_enum")
}

enum TreeName {
  TREES
  TEMPLATES
  GENERICS

  @@map("tree_name_enum")
}

enum MessageType {
  PRONOUN
  QUIRK

  @@map("message_type_enum")
}

enum ModelName {
  TRAIT
  ZODIAC
  TREE
  TEMPLATE
  MOVE
  PRONOUN
  QUIRK

  @@map("model_name_enum")
}
